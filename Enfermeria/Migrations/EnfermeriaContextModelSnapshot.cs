// <auto-generated />
using System;
using Enfermeria.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Enfermeria.Migrations
{
    [DbContext(typeof(EnfermeriaContext))]
    partial class EnfermeriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Enfermeria.Models.EnfCita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Creada")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_modificacion");

                    b.Property<TimeOnly?>("HoraLlegada")
                        .HasColumnType("time")
                        .HasColumnName("hora_llegada");

                    b.Property<TimeOnly?>("HoraSalida")
                        .HasColumnType("time")
                        .HasColumnName("hora_salida");

                    b.Property<int>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    b.Property<int?>("IdProfeLlegada")
                        .HasColumnType("int")
                        .HasColumnName("id_profe_llegada");

                    b.Property<int?>("IdProfeSalida")
                        .HasColumnType("int")
                        .HasColumnName("id_profe_salida");

                    b.Property<string>("MensajeLlegada")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("mensaje_llegada");

                    b.Property<string>("MensajeSalida")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("mensaje_salida");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("PK__enf_cita__3213E83FD147CF3E");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdProfeLlegada");

                    b.HasIndex("IdProfeSalida");

                    b.ToTable("enf_citas", null, t =>
                        {
                            t.HasTrigger("trg_enf_citas_update");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Enfermeria.Models.EnfHorario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_modificacion");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("hora");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("Id")
                        .HasName("PK__enf_hora__3213E83F51C162E5");

                    b.ToTable("enf_horarios", null, t =>
                        {
                            t.HasTrigger("trg_enf_horarios_update");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Enfermeria.Models.EnfPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cedula");

                    b.Property<string>("Departamento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("departamento");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Seccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("seccion");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("sexo")
                        .IsFixedLength();

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("PK__enf_pers__3213E83F66577561");

                    b.HasIndex(new[] { "Cedula" }, "UQ__enf_pers__415B7BE5E6660F4A")
                        .IsUnique();

                    b.HasIndex(new[] { "Usuario" }, "UQ__enf_pers__9AFF8FC6FEAFC9F7")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__enf_pers__AB6E6164C7166B98")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("enf_personas", (string)null);
                });

            modelBuilder.Entity("Enfermeria.Models.EnfCita", b =>
                {
                    b.HasOne("Enfermeria.Models.EnfHorario", "IdHorarioNavigation")
                        .WithMany("EnfCita")
                        .HasForeignKey("IdHorario")
                        .IsRequired()
                        .HasConstraintName("fk_cita_horario");

                    b.HasOne("Enfermeria.Models.EnfPersona", "IdPersonaNavigation")
                        .WithMany("EnfCitaIdPersonaNavigations")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("fk_cita_persona");

                    b.HasOne("Enfermeria.Models.EnfPersona", "IdProfeLlegadaNavigation")
                        .WithMany("EnfCitaIdProfeLlegadaNavigations")
                        .HasForeignKey("IdProfeLlegada")
                        .HasConstraintName("fk_profe_llegada");

                    b.HasOne("Enfermeria.Models.EnfPersona", "IdProfeSalidaNavigation")
                        .WithMany("EnfCitaIdProfeSalidaNavigations")
                        .HasForeignKey("IdProfeSalida")
                        .HasConstraintName("fk_profe_salida");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdPersonaNavigation");

                    b.Navigation("IdProfeLlegadaNavigation");

                    b.Navigation("IdProfeSalidaNavigation");
                });

            modelBuilder.Entity("Enfermeria.Models.EnfHorario", b =>
                {
                    b.Navigation("EnfCita");
                });

            modelBuilder.Entity("Enfermeria.Models.EnfPersona", b =>
                {
                    b.Navigation("EnfCitaIdPersonaNavigations");

                    b.Navigation("EnfCitaIdProfeLlegadaNavigations");

                    b.Navigation("EnfCitaIdProfeSalidaNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
